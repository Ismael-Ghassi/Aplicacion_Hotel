/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas;

import bd.ManejadorDB;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * This is the main screen of the program, on this screen you can search for a
 * hotel, access the reservation screen, access the modify reservation screen,
 * access the delete reservation screen, access the view reservations screen...
 * This screen has warning boxes. It also has icons
 *
 * @author Admin
 */
public class Pantalla_Principal extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Pantalla_Principal
     */
    //Busqueda buscador;
    Pantalla_Descriptiva pantalla_descriptiva; //Is a descriptive frame
    Image fotoHotel;

    public Pantalla_Principal() throws SQLException {
        initComponents();
        pantalla_descriptiva = new Pantalla_Descriptiva();
        pantalla_descriptiva.setVisible(false);

        ImageIcon usuarioIma = new ImageIcon("src/usuario.png");
        usuario1.setIcon(usuarioIma);

        ImageIcon fondo1 = new ImageIcon("src/fondoAPP.png");
        fondo.setIcon(fondo1);

        ImageIcon ubi = new ImageIcon("src/ubicacion.png");
        ubicacion.setIcon(ubi);

        imagen.setVisible(false);
        nombreHotel.setVisible(false);
        precio.setVisible(false);
        reservar.setVisible(false);
        nombreL.setVisible(false);
        precioL.setVisible(false);
        ubicacion.setVisible(false);
        ubicacionReal.setVisible(false);

        reservar.setOpaque(false);
        reservar.setBackground(new Color(0, 0, 0, 6));
        reservar.setBorder(null);

        
        /**
         * Action listener for a buttons
         */
        reservar.addActionListener(this);
        busqueda.buscar.addActionListener(this);
        busqueda.buscarVoz.addActionListener(this);
        borrarReserva.addActionListener(this);
        modReserva.addActionListener(this);
        ver_reservas.addActionListener(this);
        
        
        /**
         * Mouse listener for search button.
         */
        
        busqueda.buscarVoz.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseEntered(MouseEvent arg0) {
                busqueda.buscarVoz.setBackground((Color.WHITE));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                busqueda.buscarVoz.setBackground(new Color(0, 0, 0, 0));
            }

        });

        busqueda.buscar.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseEntered(MouseEvent arg0) {
                busqueda.buscar.setBackground((Color.WHITE));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                busqueda.buscar.setBackground(new Color(0, 0, 0, 0));
            }

        });

        
        /**
         * Actions listener for a buttons
         */
        cookies.addActionListener(this);
        cerrar.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        nombreHotel = new javax.swing.JLabel();
        reservar = new javax.swing.JButton();
        precio = new javax.swing.JLabel();
        imagen = new javax.swing.JLabel();
        precioL = new javax.swing.JLabel();
        nombreL = new javax.swing.JLabel();
        ubicacion = new javax.swing.JLabel();
        ubicacionReal = new javax.swing.JLabel();
        busqueda = new pantallas.Busqueda();
        fondo = new javax.swing.JLabel();
        barraMenu = new javax.swing.JMenuBar();
        usuario1 = new javax.swing.JMenu();
        cerrar = new javax.swing.JMenuItem();
        menuBorrar = new javax.swing.JMenu();
        borrarReserva = new javax.swing.JMenuItem();
        menuMod = new javax.swing.JMenu();
        modReserva = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        ver_reservas = new javax.swing.JMenuItem();
        cookies = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreHotel.setFont(new java.awt.Font("Segoe UI", 3, 21)); // NOI18N
        nombreHotel.setText("y");
        getContentPane().add(nombreHotel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 170, 40));

        reservar.setBackground(new java.awt.Color(204, 204, 255));
        reservar.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        reservar.setForeground(new java.awt.Color(255, 255, 255));
        reservar.setText("RESERVAR");
        reservar.setBorder(null);
        reservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservarActionPerformed(evt);
            }
        });
        getContentPane().add(reservar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 100, 30));

        precio.setFont(new java.awt.Font("Segoe UI", 3, 21)); // NOI18N
        precio.setText("y");
        getContentPane().add(precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 60, 40));
        getContentPane().add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 180, 140));

        precioL.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        precioL.setText("PRECIO:");
        getContentPane().add(precioL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, -1, -1));

        nombreL.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        nombreL.setText("NOMBRE:");
        getContentPane().add(nombreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, -1));
        getContentPane().add(ubicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 40, 40));

        ubicacionReal.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        ubicacionReal.setText("jLabel1");
        getContentPane().add(ubicacionReal, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 110, 30));
        getContentPane().add(busqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 440, 30));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 760, 439));

        barraMenu.setBackground(new java.awt.Color(255, 204, 204));
        barraMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        cerrar.setText("Cerrar sesion.");
        usuario1.add(cerrar);

        barraMenu.add(usuario1);

        menuBorrar.setBackground(new java.awt.Color(0, 0, 0));
        menuBorrar.setBorder(null);
        menuBorrar.setText("BORRAR");

        borrarReserva.setText("Borrar Reserva");
        menuBorrar.add(borrarReserva);

        barraMenu.add(menuBorrar);

        menuMod.setText("MODIFICAR");

        modReserva.setText("Modificar reserva");
        modReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modReservaActionPerformed(evt);
            }
        });
        menuMod.add(modReserva);

        barraMenu.add(menuMod);

        jMenu2.setText("VER");

        ver_reservas.setText("Ver reservas");
        jMenu2.add(ver_reservas);

        barraMenu.add(jMenu2);

        cookies.setText("COOKIES");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Datos personales");
        cookies.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem4.setText("Datos de busqueda");
        cookies.add(jCheckBoxMenuItem4);

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("Datos de tarjeta");
        cookies.add(jCheckBoxMenuItem3);

        barraMenu.add(cookies);

        setJMenuBar(barraMenu);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void reservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reservarActionPerformed

    private void modReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modReservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modReservaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pantalla_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pantalla_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pantalla_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Pantalla_Principal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Pantalla_Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    public static javax.swing.JMenuItem borrarReserva;
    private pantallas.Busqueda busqueda;
    private javax.swing.JMenuItem cerrar;
    private javax.swing.JMenu cookies;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel imagen;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu menuBorrar;
    private javax.swing.JMenu menuMod;
    public static javax.swing.JMenuItem modReserva;
    private javax.swing.JLabel nombreHotel;
    private javax.swing.JLabel nombreL;
    private javax.swing.JLabel precio;
    private javax.swing.JLabel precioL;
    private javax.swing.JButton reservar;
    private javax.swing.JLabel ubicacion;
    private javax.swing.JLabel ubicacionReal;
    private javax.swing.JMenu usuario1;
    private javax.swing.JMenuItem ver_reservas;
    // End of variables declaration//GEN-END:variables

    
    /**
     This method grants functionality to the buttons that are on the screen.
     * @param e 
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        
        /**
         * If you click this button, the program access to database to take 
         * the hotel data entered in the search engine.
         * 
         *The data collected will be written in the corresponding items.
         * If the hotel entered is not in the database, a warning message 
         * will be issued.
         */
        if (e.getSource() == reservar) {
            pantalla_descriptiva.setVisible(true);
            this.setVisible(false);
        } else if (e.getSource() == busqueda.buscar) {
            try {
                ManejadorDB db = new ManejadorDB("hotel_interfaces");
                ResultSet rr = db.consulta("SELECT * FROM hoteles WHERE nombre = '" + busqueda.busqueda.getText().toString() + "'");
                while (rr.next()) {
                    nombreHotel.setText(rr.getString("nombre"));
                    precio.setText(rr.getString("precio"));
                    ubicacionReal.setText(rr.getString("Ciudad"));

                    pantalla_descriptiva.titulo.setText(rr.getString("nombre"));
                    pantalla_descriptiva.precio.setText(rr.getString("precio") + "$");
                    pantalla_descriptiva.ubicacion.setText(rr.getString("ciudad"));
                    pantalla_descriptiva.descripcion.setText(rr.getString("descripcion"));
                    pantalla_descriptiva.idHotel.setText(rr.getString("id"));

                    URL url = new URL(rr.getString("imagen"));
                    fotoHotel = ImageIO.read(url);
                    imagen.setIcon(new ImageIcon(fotoHotel));
                    pantalla_descriptiva.imagenHotel.setIcon(new ImageIcon(fotoHotel));

                }

                if (rr.isAfterLast()) {
                    nombreHotel.setVisible(true);
                    precio.setVisible(true);
                    imagen.setVisible(true);
                    reservar.setVisible(true);
                    nombreL.setVisible(true);
                    precioL.setVisible(true);
                    ubicacion.setVisible(true);
                    ubicacionReal.setVisible(true);
                } else {
                    nombreHotel.setVisible(false);
                    precio.setVisible(false);
                    imagen.setVisible(false);
                    reservar.setVisible(false);
                    nombreL.setVisible(false);
                    precioL.setVisible(false);
                    ubicacion.setVisible(false);
                    ubicacionReal.setVisible(false);
                    JOptionPane.showMessageDialog(this, "El hotel no se encuentra en la BD", "Error", JOptionPane.ERROR_MESSAGE);
                }

                rr.close();
                db.cerrar();

            } catch (SQLException ex) {
                Logger.getLogger(Pantalla_Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Pantalla_Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Pantalla_Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            /**
             * If you click this button you will search by voice.
             */
        } else if (e.getSource() == busqueda.buscarVoz) {
            JOptionPane.showMessageDialog(this, "Este dispositivo no cuenta con un microfono para esta función.");

            /**
             * If you press this button the program will take you to the 
             * delete reservation frame
             */
        } else if (e.getSource() == borrarReserva) {
            this.setVisible(false);
            Borrar_Reserva borrar = new Borrar_Reserva();
            borrar.setVisible(true);

            
            /**
             * If you press this button the program will take you to the 
             * mod reservation frame
             */
        } else if (e.getSource() == modReserva) {
            this.setVisible(false);
            Modificar_Reserva mod = new Modificar_Reserva();
            mod.setVisible(true);
            
            /**
             * If you press this button the program will take you to the 
             * view reservation frame
             */
        } else if (e.getSource() == ver_reservas) {
            this.setVisible(false);
            Ver_Reservas ver = new Ver_Reservas();
            ver.setVisible(true);
            
            /**
             * If you press this button you can access the cookies checkbox
             */
        } else if (e.getSource() == cookies) {
            JOptionPane.showMessageDialog(this, "Los datos seran usado para futuros analisis con la finalidad de mejorar la experiencia de usuario.");
        
            /**
             * If you press this button you can exit the program
             */
        } else if (e.getSource() == cerrar) {
            JOptionPane.showMessageDialog(this, "Se ha cerrado la sesion.");
            System.exit(0);
        }

    }
}
